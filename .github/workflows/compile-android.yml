name: ARM64EC build for Android

on:
  push:
    paths-ignore:
      - '.github/workflows/main.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Wine repository
        uses: actions/checkout@v4

      - name: Install the required deps
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt install -y \
          debhelper-compat=13 \
          gcc-mingw-w64 \
          libz-mingw-w64-dev \
          lzma \
          flex \
          bison \
          quilt \
          unzip \
          gettext \
          icoutils \
          sharutils \
          pkg-config \
          dctrl-tools \
          imagemagick \
          librsvg2-bin \
          fontforge-nox \
          khronos-api \
          unicode-data \
          unicode-idna \
          libgl-dev \
          libxi-dev \
          libxt-dev \
          libxmu-dev \
          libx11-dev \
          libxi-dev \
          libxinerama-dev \
          libxcursor-dev \
          libxext-dev \
          libxfixes-dev \
          libxrandr-dev \
          libxcursor-dev \
          libxrender-dev \
          libxkbfile-dev \
          libxxf86vm-dev \
          libxxf86dga-dev \
          libxinerama-dev \
          libglu1-mesa-dev \
          libxcomposite-dev \
          libxkbregistry-dev \
          libxml-libxml-perl \
          libssl-dev \
          libv4l-dev \
          libsdl2-dev \
          libkrb5-dev \
          libudev-dev \
          libpulse-dev \
          libldap2-dev \
          unixodbc-dev \
          libcups2-dev \
          libcapi20-dev \
          libvulkan-dev \
          libvulkan-dev:i386 \
          libopenal-dev \
          libdbus-1-dev \
          freeglut3-dev \
          libunwind-dev \
          libpcap0.8-dev \
          libasound2-dev \
          libgphoto2-dev \
          libosmesa6-dev \
          libncurses-dev \
          libwayland-dev \
          libfreetype-dev \
          libgnutls28-dev \
          libpcsclite-dev \
          libusb-1.0-0-dev \
          libgettextpo-dev \
          libfontconfig-dev \
          ocl-icd-opencl-dev \
          libgstreamer-plugins-base1.0-dev \
          libdrm2 \
          libdrm-dev \
          libdrm2:i386 \
          libdrm-dev:i386

          sudo apt-get install -y \
          build-essential \
          gcc-multilib \
          libx11-dev:i386 \
          libfreetype6-dev:i386 \
          libxcursor-dev:i386 \
          libxi-dev:i386 \
          libxshmfence-dev:i386 \
          libxxf86vm-dev:i386 \
          libxrandr-dev:i386 \
          libxinerama-dev:i386 \
          libxcomposite-dev:i386 \
          libglu1-mesa-dev:i386 \
          libosmesa6-dev:i386 \
          libdbus-1-dev:i386 \
          libncurses5-dev:i386 \
          libsane-dev:i386 \
          libv4l-dev:i386 \
          libgphoto2-dev:i386 \
          liblcms2-dev:i386 \
          libcapi20-dev:i386 \
          libcups2-dev:i386 \
          libfontconfig1-dev:i386 \
          libgsm1-dev:i386 \
          libtiff5-dev:i386 \
          libmpg123-dev:i386 \
          libopenal-dev:i386 \
          libldap2-dev:i386 \
          libjpeg-dev:i386
          sudo apt-get purge -y llvm-18 clang-18
      - name: Downloading and preparing Termux deps
        run: |
          mkdir imagefs
          cd imagefs
          pwd
          wget https://github.com/ziad9267/termux-on-gha/releases/download/test/termuxfs.tar
          tar xf termuxfs.tar
          rm -rf termuxfs.tar
          sudo mv ./data /
          #sudo ls -R /data/data/com.termux
          cd /data
          sudo chown -R $(whoami):$(whoami) .
      - name: Download Bylaws toolchain and extracting it
        run: |
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20250730/llvm-mingw-20250730-ucrt-ubuntu-22.04-x86_64.tar.xz
          tar -xf llvm-mingw-20250730-ucrt-ubuntu-22.04-x86_64.tar.xz
          rm llvm-mingw-20250730-ucrt-ubuntu-22.04-x86_64.tar.xz
          sudo mv llvm-mingw-20250730-ucrt-ubuntu-22.04-x86_64 /opt/llvm-mingw
          #sudo chown -R $(whoami):$(whoami) .
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: ndk
        with:
         ndk-version: r27c
         add-to-path: false
         link-to-sdk: true
      - name: Building Wine tools
        run: |
          mkdir wine-tools
          mkdir wine-tools-build
          cd wine-tools-build
          ../configure --without-x --without-gstreamer --without-vulkan --without-wayland
          make -j$(nproc) __tooldeps__ nls/all
          ls
          mv ./* ../wine-tools
      - name: Applying Termux related patches
        run: |
          patch -p1 < patches/0001-fix-paths.patch
          patch -p1 < patches/0002-fix-defines.patch
          patch -p1 < patches/0003-fix-socket-ipx.patch
          patch -p1 < patches/0003-impl-shm_open.patch
          patch -p1 < patches/0004-no-pthread_mutexattr_setprotocol.patch
          patch -p1 < patches/9998-fix-winegcc-build-target.patch.beforehostbuild
          patch -p1 < patches/9999-fix-winebuild-as-type.patch.beforehostbuild
      - name: Compiling Wine
        run: |
          export TOOLCHAIN="/usr/local/lib/android/sdk/ndk/27.3.13750724/toolchains/llvm/prebuilt/linux-x86_64/bin"
          export LLVM_MINGW_TOOLCHAIN="/opt/llvm-mingw/bin"
          export PATH="$LLVM_MINGW_TOOLCHAIN:$PATH"
          export deps="/data/data/com.termux/files/usr"

          export CC="$TOOLCHAIN/clang --target=aarch64-linux-android28"
          export AS=$CC
          export CXX="$TOOLCHAIN/clang++ --target=aarch64-linux-android28"

          export PKG_CONFIG_LIBDIR=$deps/lib/pkgconfig:$deps/share/pkgconfig
          export CPPFLAGS="-I$deps/include"
          export CFLAGS="-Wno-declaration-after-statement -Wno-implicit-function-declaration -Wno-int-conversion"
          export LDFLAGS="-L$deps/lib -Wl,-rpath=$deps/lib"
          #export LIBRARY_PATH="$deps/lib${LIBRARY_PATH:+:$LIBRARY_PATH}"
          export FREETYPE_CFLAGS="-I$deps/include/freetype2"
          export PULSE_CFLAGS="-I$deps/include/pulse"
          export PULSE_LIBS="-L$deps/lib/pulseaudio -lpulse"
          export SDL2_CFLAGS="-I$deps/include/SDL2"
          export SDL2_LIBS="-L$deps/lib -lSDL2"
          export GSTREAMER_CFLAGS="-I$deps/include/gstreamer-1.0 -I$deps/include/glib-2.0 -I$deps/lib/glib-2.0/include -I$deps/glib-2.0/include -I$deps/lib/gstreamer-1.0/include"
          export GSTREAMER_LIBS="-L$deps/lib -lgstgl-1.0 -lgstapp-1.0 -lgstvideo-1.0 -lgstaudio-1.0 -lglib-2.0 -lgobject-2.0 -lgio-2.0 -lgsttag-1.0 -lgstbase-1.0 -lgstreamer-1.0"
          export FFMPEG_CFLAGS="-I$deps/include/libavutil -I$deps/include/libavcodec -I$deps/include/libavformat"
          export FFMPEG_LIBS="-L$deps/lib -lavutil -lavcodec -lavformat"
          
          mkdir compiled-files
          
          ./configure \
          --enable-archs=arm64ec,aarch64,i386 \
          --prefix=/usr \
          --host=aarch64-linux-android \
          --with-mingw=clang \
          --with-wine-tools=./wine-tools \
          --enable-win64 \
          --enable-nls \
          --with-pulse \
          --disable-win16 \
          --disable-opencl \
          --without-alsa \
          --disable-tests \
          --without-capi \
          --without-coreaudio \
          --without-cups \
          --without-dbus \
          --without-gphoto \
          --without-gssapi \
          --without-krb5 \
          --without-alsa \
          --without-netapi \
          --without-oss \
          --without-pcap \
          --without-pcsclite \
          --without-sane \
          --without-udev \
          --without-unwind \
          --without-usb \
          --without-v4l2 \
          --without-wayland \
          --without-xinerama \
          --without-xxf86vm \
          --enable-wineandroid_drv=no

          make -j$(nproc) -v
          make install -j$(nproc) DESTDIR=compiled-files/
      - name: Uploading Wine files
        uses: actions/upload-artifact@v4
        with:
          name: arm64ec-Android
          path: compiled-files/

      - name: Uploading Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: ./config.log
