name: arm64ec Build for Android

on:
  push:
    paths-ignore:
      - '.github/workflows/main.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Wine repository
        uses: actions/checkout@v4

      - name: Install the required deps
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wget debhelper-compat lzma flex bison quilt unzip gettext icoutils sharutils pkg-config dctrl-tools imagemagick librsvg2-bin fontforge-nox khronos-api unicode-data unicode-idna libgl-dev libxi-dev libxt-dev libxmu-dev libx11-dev libxext-dev libxfixes-dev libxrandr-dev libxcursor-dev libxrender-dev libxkbfile-dev libxxf86vm-dev libxxf86dga-dev libxinerama-dev libglu1-mesa-dev libxcomposite-dev libxkbregistry-dev libxml-libxml-perl libssl-dev libv4l-dev libsdl2-dev libkrb5-dev libudev-dev libpulse-dev libldap2-dev unixodbc-dev libcups2-dev libcapi20-dev libvulkan-dev libopenal-dev libdbus-1-dev freeglut3-dev libunwind-dev libpcap0.8-dev libasound2-dev libgphoto2-dev libosmesa6-dev libncurses-dev libwayland-dev libfreetype-dev libgnutls28-dev libpcsclite-dev libusb-1.0-0-dev libgettextpo-dev libfontconfig-dev ocl-icd-opencl-dev libgstreamer-plugins-base1.0-dev
          sudo apt-get install build-essential \
          libncurses-dev \
          xorg-dev \
          libfreetype6-dev \
          libx11-dev \
          libxcomposite-dev \
          libxcursor-dev \
          libxi-dev \
          libxinerama-dev \
          libxrandr-dev \
          libxxf86vm-dev \
          libglu1-mesa-dev \
          libosmesa6-dev \
          libpcap-dev \
          libdbus-1-dev \
          libfreetype6-dev:i386 \
          libx11-dev:i386 \
          libxcomposite-dev:i386 \
          libxcursor-dev:i386 \
          libxi-dev:i386 \
          libxinerama-dev:i386 \
          libxrandr-dev:i386 \
          libxxf86vm-dev:i386 \
          libglu1-mesa-dev:i386 \
          libosmesa6-dev:i386 \
          #libpcap-dev:i386 \
          #libdbus-1-dev:i386
          sudo apt-get purge -y llvm-18 clang-18
      - name: Download Bylaws toolchain and extracting it
        run: |
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20250730/llvm-mingw-20250730-ucrt-ubuntu-22.04-x86_64.tar.xz
          tar -xf llvm-mingw-20250730-ucrt-ubuntu-22.04-x86_64.tar.xz
          rm llvm-mingw-20250730-ucrt-ubuntu-22.04-x86_64.tar.xz
          sudo mv llvm-mingw-20250730-ucrt-ubuntu-22.04-x86_64 /opt/llvm-mingw
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: ndk
        with:
         ndk-version: r27c
         add-to-path: false
         link-to-sdk: true
      - name: Building Wine tools
        run: |
          export PATH="/opt/llvm-mingw/bin:$PATH"
          
          mkdir wine-tools
          mkdir wine-tools-build
          cd wine-tools-build
          ../configure --enable-win64 --without-wayland --disable-tests --enable-wineandroid_drv=no
          cp -rf ./* ../wine-tools

          cd ../wine-tools/tools/winebuild && make -j$(nproc)
          cd ../wrc && make -j$(nproc)
          cd ../widl && make -j$(nproc)
          cd ../winegcc && make -j$(nproc)
          cd ../sfnt2fon && make -j$(nproc)
          cd ../winedump && make -j$(nproc)
          cd ../winemaker && make -j$(nproc)
          cd ../wmc && make -j$(nproc)

          #gcc ../../../tools/make_xftmpl.c -I../../../wine-tools-build/include -I../../../include -o ../../../wine-tools/tools/make_xftmpl
          #cp ../../../tools/wineapploader.in ../../../wine-tools/tools/wineapploader
          #chmod +x ../../../wine-tools/tools/wineapploader

          cd ../../..
      - name: Compiling Wine
        run: |
          export TOOLCHAIN="/usr/local/lib/android/sdk/ndk/27.3.13750724/toolchains/llvm/prebuilt/linux-x86_64/bin"
          export PATH="/opt/llvm-mingw/bin:$PATH"
          
          mkdir build-prefix
          mkdir compiled-files

          ./configure \
          --enable-archs=arm64ec,aarch64,i386 \
          --prefix=/build-prefix \
          --host=aarch64-linux-android \
          --with-mingw=clang \
          --with-wine-tools=wine-tools/ \
          --enable-win64 \
          --with-pulse \
          --disable-win16 \
          --without-alsa \
          --disable-tests \
          --without-capi \
          --without-coreaudio \
          --without-cups \
          --without-dbus \
          --without-gphoto \
          --without-gssapi \
          --without-krb5 \
          --without-alsa \
          --without-netapi \
          --without-oss \
          --without-pcap \
          --without-pcsclite \
          --without-sane \
          --without-udev \
          --without-unwind \
          --without-usb \
          --without-v4l2 \
          --without-wayland \
          --without-xinerama \
          --without-xxf86vm \
          --enable-wineandroid_drv=no \
          CC="$TOOLCHAIN/clang --target=aarch64-linux-android28" \
          AS=$CC \
          CXX="$TOOLCHAIN/clang++ --target=aarch64-linux-android28"
          
          make -j$(nproc)
          make install -j$(nproc) DESTDIR=compiled-files/
      - name: Uploading Wine files
        uses: actions/upload-artifact@v4
        with:
          name: arm64ec-Android
          path: compiled-files/
